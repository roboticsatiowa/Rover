# syntax=docker/dockerfile:1.7-labs

# ---------------------
# Build image
# ---------------------

# using ros humble core 
# ARM64 (raspberry pi 4) compatible:
FROM ros:humble-ros-core-jammy@sha256:ce60463faaaa1f41a2c28fe852d407f4e538c7cad815b73f030a5e841d73103d as build

# docker run --rm --privileged multiarch/qemu-user-static --reset -p yes -c yes

# use bash instead of sh. allows us to use 'source' command.
SHELL ["/bin/bash", "-c"]

# install dependencies. delete cache after, and dont install recommended packages to keep image small.

RUN apt-get update \    
    && apt-get install -q -y --no-install-recommends \
    python3-colcon-common-extensions \
    make \
    build-essential \
    ros-humble-ament-cmake \
    libasio-dev \
    ros-humble-diagnostic-updater \
    ros-humble-tf2 \
    && rm -rf /var/lib/apt/lists/*

# Create robotics user and setup user environment
RUN groupadd robotics \
    && useradd -rm -d /home/robotics -s /bin/bash -g robotics robotics \
    && usermod -aG dialout robotics \
    && usermod -aG video robotics \
    && touch "${HOME}/.bashrc" \
    && chown -R robotics:robotics "${HOME}/.bashrc" \
    && echo "source /opt/ros/humble/setup.bash" >> "${HOME}/.bashrc" \
    && echo "source ${HOME}/Rover/install/setup.bash" >> "${HOME}/.bashrc"

# setup entrypoint and project files

ADD ./src /home/robotics/Rover/src
ADD ./docker/entrypoint.sh /home/robotics/Rover/entrypoint
RUN chmod +x /home/robotics/Rover/entrypoint

RUN chown -R robotics:robotics /home/robotics
USER robotics
WORKDIR /home/robotics/Rover

# build the workspace
RUN source /opt/ros/humble/setup.bash && colcon build \
    && rm -rf /home/robotics/Rover/src

# ---------------------
# Main image
# ---------------------

FROM ros:humble-ros-core-jammy@sha256:ce60463faaaa1f41a2c28fe852d407f4e538c7cad815b73f030a5e841d73103d as main

# use bash instead of sh. allows us to use 'source' command.
SHELL ["/bin/bash", "-c"]

# install dependencies. delete cache after, and dont install recommended packages to keep image small.
RUN apt-get update \
    && apt-get install -q -y --no-install-recommends \
    python3-venv \
    python3-serial \
    python3-pip \
    ffmpeg \
    libsm6 \
    libxext6 \
    ros-humble-cv-bridge \
    ros-humble-rosbag2 \
    && rm -rf /var/lib/apt/lists/*

RUN pip3 install --no-cache-dir opencv-python sympy

COPY --from=build /home/robotics/Rover /home/robotics/Rover
COPY ./super_client_configuration_file.xml /home/robotics/super_client_configuration_file.xml

# Create robotics user and setup user environment
RUN groupadd robotics \
    && useradd -rm -d /home/robotics -s /bin/bash -g robotics robotics \
    && usermod -aG dialout robotics \
    && usermod -aG video robotics \
    && echo "source /opt/ros/humble/setup.bash" >> "${HOME}/.bashrc" \
    && echo "source ${HOME}/Rover/install/setup.bash" >> "${HOME}/.bashrc"

RUN chown -R robotics:robotics /home/robotics
USER robotics
WORKDIR /home/robotics/Rover