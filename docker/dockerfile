# syntax=docker/dockerfile:1.7-labs

# using ros humble core 
# ARM64 (raspberry pi 4) compatible:
FROM ros:humble-ros-core-jammy@sha256:ce60463faaaa1f41a2c28fe852d407f4e538c7cad815b73f030a5e841d73103d

# docker run --rm --privileged multiarch/qemu-user-static --reset -p yes -c yes

# use bash instead of sh. allows us to use 'source' command.
SHELL ["/bin/bash", "-c"]

# install dependencies. delete cache after, and dont install recommended packages to keep image small.

RUN apt-get update \
    && apt-get install -q -y --no-install-recommends \
    python3-venv \
    python3-rosdep2 \
    python3-colcon-common-extensions \
    python3-serial \
    ros-humble-rosbag2 \
    ros-humble-usb-cam \
    make \
    build-essential \
    ros-humble-ament-cmake \
    && rm -rf /var/lib/apt/lists/*

# Create robotics user
RUN groupadd robotics \
    && useradd -rm -d /home/robotics -s /bin/bash -g robotics robotics \
    && usermod -aG dialout robotics

# setup user environment
RUN touch "${HOME}/.bashrc" \
    && chown -R robotics:robotics "${HOME}/.bashrc" \
    && echo "source /opt/ros/humble/setup.bash" >> "${HOME}/.bashrc" \
    && echo "source ${HOME}/Rover/install/setup.bash" >> "${HOME}/.bashrc"

# setup entrypoint and project files
ADD ./bin ./bin 
ADD ./install.sh ./install.sh
ADD ./src ./src
ADD ./docker/entrypoint.sh ./entrypoint
RUN chmod +x ./entrypoint

RUN chown -R robotics:robotics /home/robotics
USER robotics
WORKDIR /home/robotics/Rover

# build the workspace
RUN source /opt/ros/humble/setup.bash && colcon build --symlink-install --parallel-workers 4